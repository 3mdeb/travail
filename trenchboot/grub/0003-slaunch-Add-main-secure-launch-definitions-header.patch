From 7f02237c7531143304003f37e833dcd45c26cda7 Mon Sep 17 00:00:00 2001
From: Ross Philipson <ross.philipson@oracle.com>
Date: Fri, 14 Dec 2018 12:37:53 -0500
Subject: [PATCH 3/5] slaunch: Add main secure launch definitions header

Signed-off-by: Ross Philipson <ross.philipson@oracle.com>
---
 grub-core/Makefile.am  |  3 +++
 include/grub/slaunch.h | 49 +++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 52 insertions(+)
 create mode 100644 include/grub/slaunch.h

diff --git a/grub-core/Makefile.am b/grub-core/Makefile.am
index 78ef05822..04d67011a 100644
--- a/grub-core/Makefile.am
+++ b/grub-core/Makefile.am
@@ -100,6 +100,7 @@ KERNEL_HEADER_FILES += $(top_builddir)/include/grub/machine/pxe.h
 KERNEL_HEADER_FILES += $(top_builddir)/include/grub/machine/int.h
 KERNEL_HEADER_FILES += $(top_srcdir)/include/grub/i386/tsc.h
 KERNEL_HEADER_FILES += $(top_srcdir)/include/grub/tis.h
+KERNEL_HEADER_FILES += $(top_srcdir)/include/grub/slaunch.h
 endif
 
 if COND_i386_efi
@@ -109,6 +110,7 @@ KERNEL_HEADER_FILES += $(top_srcdir)/include/grub/i386/tsc.h
 KERNEL_HEADER_FILES += $(top_srcdir)/include/grub/acpi.h
 KERNEL_HEADER_FILES += $(top_srcdir)/include/grub/pci.h
 KERNEL_HEADER_FILES += $(top_srcdir)/include/grub/i386/pmtimer.h
+KERNEL_HEADER_FILES += $(top_srcdir)/include/grub/slaunch.h
 endif
 
 if COND_i386_coreboot
@@ -165,6 +167,7 @@ KERNEL_HEADER_FILES += $(top_srcdir)/include/grub/i386/tsc.h
 KERNEL_HEADER_FILES += $(top_srcdir)/include/grub/pci.h
 KERNEL_HEADER_FILES += $(top_srcdir)/include/grub/acpi.h
 KERNEL_HEADER_FILES += $(top_srcdir)/include/grub/i386/pmtimer.h
+KERNEL_HEADER_FILES += $(top_srcdir)/include/grub/slaunch.h
 endif
 
 if COND_ia64_efi
diff --git a/include/grub/slaunch.h b/include/grub/slaunch.h
new file mode 100644
index 000000000..bba307ac2
--- /dev/null
+++ b/include/grub/slaunch.h
@@ -0,0 +1,49 @@
+/*
+ *  GRUB  --  GRand Unified Bootloader
+ *
+ *  GRUB is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  GRUB is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with GRUB.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Main secure launch definitions header file.
+ */
+
+#ifndef GRUB_SLAUNCH_H
+#define GRUB_SLAUNCH_H 1
+
+#include <grub/types.h>
+#include <grub/i386/linux.h>
+
+#define GRUB_TB_BOOTPARAMS_OFFSET	0xcc
+
+struct grub_trenchboot_info
+{
+  grub_uint32_t tb_entry;   /* Field updated by boot build tool */
+  grub_uint32_t tb_mle_hdr; /* Field updated by boot build tool */
+  grub_uint32_t tb_flags;
+  grub_uint32_t tb_lo_pmr_min;
+  grub_uint32_t tb_dev_map;
+} GRUB_PACKED;
+
+struct grub_slaunch_params
+{
+  struct linux_kernel_params *params;
+  grub_addr_t real_mode_target;
+  grub_addr_t prot_mode_target;
+};
+
+grub_err_t grub_slaunch_boot_txt (struct grub_slaunch_params *slparams);
+grub_err_t grub_slaunch_boot_skinit (struct grub_slaunch_params *slparams);
+
+void grub_linux_slaunch_set (grub_err_t (*sfunc) (struct grub_slaunch_params*));
+
+#endif
-- 
2.13.6

