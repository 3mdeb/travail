################################################################################
SHORT DESCRIPTION: 
################################################################################
Add optional pid argument and ro tapdisk support.

################################################################################
LONG DESCRIPTION: 
################################################################################
Optional pid argument simplifies device destruction interface and the 
pause/unpause interfaces.

The -R option sets the TAPDISK_MESSAGE_FLAG_RDONLY allowing tapdisks to be
created and opened RO.

################################################################################
CHANGELOG 
################################################################################
Patch formed from commits by: Ross Philipson, philipsonr@ainfosec.com, 3/22/2016
Author: Jake Wires <Jake.Wires@citrix.com>
7cef6457c38cc51c46d6eaf32343796b5d7704be

################################################################################
REMOVAL 
################################################################################

################################################################################
UPSTREAM PLAN
################################################################################

################################################################################
INTERNAL DEPENDENCIES 
################################################################################

################################################################################
PATCHES 
################################################################################
Index: xen-4.3.4/tools/blktap2/control/tap-ctl-list.c
===================================================================
--- xen-4.3.4.orig/tools/blktap2/control/tap-ctl-list.c
+++ xen-4.3.4/tools/blktap2/control/tap-ctl-list.c
@@ -534,3 +534,28 @@ tap_ctl_find(const char *type, const cha
 
 	return ret;
 }
+
+int
+tap_ctl_find_pid(int minor)
+{
+	int pid, err;
+	tap_list_t *entry;
+	struct list_head list = LIST_HEAD_INIT(list);
+
+	err = tap_ctl_list(&list);
+	if (err)
+		return err;
+
+	pid = -1;
+
+	tap_list_for_each_entry(entry, &list) {
+		if (entry->minor == minor) {
+			pid = entry->pid;
+			break;
+		}
+	}
+
+	tap_ctl_list_free(&list);
+
+	return pid >= 0 ? pid : -ENOENT;
+}
Index: xen-4.3.4/tools/blktap2/control/tap-ctl.c
===================================================================
--- xen-4.3.4.orig/tools/blktap2/control/tap-ctl.c
+++ xen-4.3.4/tools/blktap2/control/tap-ctl.c
@@ -31,6 +31,8 @@
 #include <string.h>
 #include <unistd.h>
 #include <getopt.h>
+#include <sys/stat.h>
+#include <sys/types.h>
 
 #include "tap-ctl.h"
 
@@ -247,7 +249,7 @@ usage:
 static void
 tap_cli_create_usage(FILE *stream)
 {
-	fprintf(stream, "usage: create <-a args> [-d device name]\n");
+	fprintf(stream, "usage: create <-a args> [-d device name] [-R readonly]\n");
 }
 
 static int
@@ -260,7 +262,7 @@ tap_cli_create(int argc, char **argv)
 	devname = NULL;
 
 	optind = 0;
-	while ((c = getopt(argc, argv, "a:d:h")) != -1) {
+	while ((c = getopt(argc, argv, "a:Rd:h")) != -1) {
 		switch (c) {
 		case 'a':
 			args = optarg;
@@ -268,6 +270,9 @@ tap_cli_create(int argc, char **argv)
 		case 'd':
 			devname = optarg;
 			break;
+		case 'R':
+			flags |= TAPDISK_MESSAGE_FLAG_RDONLY;
+			break;
 		case '?':
 			goto usage;
 		case 'h':
@@ -293,19 +298,21 @@ usage:
 static void
 tap_cli_destroy_usage(FILE *stream)
 {
-	fprintf(stream, "usage: destroy <-p pid> <-m minor>\n");
+	fprintf(stream, "usage: destroy (<-m minor> [-p pid] | <-d dev>)\n");
 }
 
 static int
 tap_cli_destroy(int argc, char **argv)
 {
 	int c, pid, minor;
+	const char *device;
 
 	pid   = -1;
 	minor = -1;
+	device = -1;
 
 	optind = 0;
-	while ((c = getopt(argc, argv, "p:m:h")) != -1) {
+	while ((c = getopt(argc, argv, "p:m:d:h")) != -1) {
 		switch (c) {
 		case 'p':
 			pid = atoi(optarg);
@@ -313,6 +320,9 @@ tap_cli_destroy(int argc, char **argv)
 		case 'm':
 			minor = atoi(optarg);
 			break;
+		case 'd':
+			device = optarg;
+			break;
 		case '?':
 			goto usage;
 		case 'h':
@@ -321,9 +331,40 @@ tap_cli_destroy(int argc, char **argv)
 		}
 	}
 
-	if (pid == -1 || minor == -1)
+	if (device) {
+		int maj;
+		struct stat sb;
+
+		if (stat(device, &sb)) {
+			perror("stat");
+			return -errno;
+		}
+
+		maj = tap_ctl_blk_major();
+		if (maj < 0) {
+			fprintf(stderr, "failed to find td major: %d\n", maj);
+			return maj;
+		}
+
+		if (!S_ISBLK(sb.st_mode) || major(sb.st_rdev) != maj) {
+			fprintf(stderr, "invalid device %s\n", device);
+			return -EINVAL;
+		}
+
+		minor = minor(sb.st_rdev);
+	}
+
+	if (minor == -1)
 		goto usage;
 
+	if (pid == -1) {
+		pid = tap_ctl_find_pid(minor);
+		if (pid == -1) {
+			fprintf(stderr, "failed to find pid for %d\n", minor);
+			return pid;
+		}
+	}
+
 	return tap_ctl_destroy(pid, minor);
 
 usage:
@@ -498,7 +539,7 @@ usage:
 static void
 tap_cli_pause_usage(FILE *stream)
 {
-	fprintf(stream, "usage: pause <-p pid> <-m minor>\n");
+	fprintf(stream, "usage: pause <-m minor> [-p pid]\n");
 }
 
 static int
@@ -526,9 +567,17 @@ tap_cli_pause(int argc, char **argv)
 		}
 	}
 
-	if (pid == -1 || minor == -1)
+	if (minor == -1)
 		goto usage;
 
+	if (pid == -1) {
+		pid = tap_ctl_find_pid(minor);
+		if (pid == -1) {
+			fprintf(stderr, "failed to find pid for %d\n", minor);
+			return pid;
+		}
+	}
+
 	return tap_ctl_pause(pid, minor);
 
 usage:
@@ -539,7 +588,7 @@ usage:
 static void
 tap_cli_unpause_usage(FILE *stream)
 {
-	fprintf(stream, "usage: unpause <-p pid> <-m minor> [-a args]\n");
+	fprintf(stream, "usage: unpause <-m minor> [-p pid] [-a args]\n");
 }
 
 int
@@ -572,9 +621,17 @@ tap_cli_unpause(int argc, char **argv)
 		}
 	}
 
-	if (pid == -1 || minor == -1)
+	if (minor == -1)
 		goto usage;
 
+	if (pid == -1) {
+		pid = tap_ctl_find_pid(minor);
+		if (pid == -1) {
+			fprintf(stderr, "failed to find pid for %d\n", minor);
+			return pid;
+		}
+	}
+
 	return tap_ctl_unpause(pid, minor, args);
 
 usage:
@@ -633,7 +690,7 @@ usage:
 static void
 tap_cli_open_usage(FILE *stream)
 {
-	fprintf(stream, "usage: open <-p pid> <-m minor> <-a args>\n");
+	fprintf(stream, "usage: open <-p pid> <-m minor> <-a args> [-R readonly]\n");
 }
 
 static int
@@ -647,7 +704,7 @@ tap_cli_open(int argc, char **argv)
 	args  = NULL;
 
 	optind = 0;
-	while ((c = getopt(argc, argv, "a:m:p:h")) != -1) {
+	while ((c = getopt(argc, argv, "a:Rm:p:h")) != -1) {
 		switch (c) {
 		case 'p':
 			pid = atoi(optarg);
@@ -658,6 +715,9 @@ tap_cli_open(int argc, char **argv)
 		case 'a':
 			args = optarg;
 			break;
+		case 'R':
+			flags |= TAPDISK_MESSAGE_FLAG_RDONLY;
+			break;
 		case '?':
 			goto usage;
 		case 'h':
Index: xen-4.3.4/tools/blktap2/control/tap-ctl.h
===================================================================
--- xen-4.3.4.orig/tools/blktap2/control/tap-ctl.h
+++ xen-4.3.4/tools/blktap2/control/tap-ctl.h
@@ -77,6 +77,7 @@ int tap_ctl_get_driver_id(const char *ha
 int tap_ctl_list(tap_list_t ***list);
 void tap_ctl_free_list(tap_list_t **list);
 int tap_ctl_find(const char *type, const char *path, tap_list_t *tap);
+int tap_ctl_find_pid(int minor);
 
 int tap_ctl_allocate(int *minor, char **devname);
 int tap_ctl_free(const int minor);
